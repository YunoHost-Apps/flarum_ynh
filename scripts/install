#!/bin/bash

source _common.sh
source experimental_helpers/ynh_add_swap
source /usr/share/yunohost/helpers

ynh_app_setting_set --key=php_upload_max_filesize --value=100M

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

core_version=$(ynh_app_upstream_version)

admin_mail=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_app_setting_set --key=language --value="$language"
ynh_app_setting_set --key=project_version --value="$project_version"
ynh_app_setting_set --key=core_version --value="$core_version"
ynh_app_setting_set --key=ldap_version --value="$ldap_version"

#=================================================

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --source_id="flarum"

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# SYSTEM CONFIGURATION
#=================================================
ynh_script_progression "Adding system configurations related to $app..."

# Create a dedicated PHP-FPM config
ynh_config_add_phpfpm

# Create a dedicated NGINX config
ynh_config_add_nginx

# Use logrotate to manage application logfile(s)
ynh_config_add_logrotate

#=================================================
# SPECIFIC SETUP
#=================================================
# ADD SWAP
#=================================================
ynh_print_info "Adding swap..."

if ! ynh_in_ci_tests; then
  ynh_add_swap --size=$swap_needed
fi

#=================================================
# INSTALL COMPOSER DEPENDENCIES
#=================================================
ynh_script_progression "Installing composer dependencies..."

ynh_composer_install
ynh_composer_exec install --no-dev

# Set Flarum version
ynh_composer_exec require flarum/core:$core_version --prefer-lowest --no-update

# Require LDAP extension
ynh_composer_exec require tituspijean/flarum-ext-auth-ldap:$ldap_version --no-update

# Update and download dependencies
ynh_composer_exec update

#=================================================
# FLARUM POST-INSTALL
#=================================================
ynh_script_progression "Configuring Flarum..."

# Copy and populate configuration.yml to working directory
ynh_config_add --template="configuration.yml" --destination="$install_dir/configuration.yml"

# Execute post-installation
pushd $install_dir
  ynh_exec_as_app php$php_version -d $install_dir -d memory_limit=-1 flarum install -f configuration.yml
  # Delete configuration.yml as it contains sensitive data
  ynh_safe_rm "$install_dir/configuration.yml"
popd

# Email setup
ynh_config_add --template="mail.sql.template" --destination="../conf/mail.sql"
ynh_mysql_db_shell < ../conf/mail.sql

# Enable and set up the LDAP auth extension
ynh_script_progression "Enabling and configuring LDAP extension..."
activate_flarum_extension $db_name "tituspijean-auth-ldap"
ynh_config_add --template="ldap.sql.template" --destination="../conf/ldap.sql"
ynh_mysql_db_shell < ../conf/ldap.sql

# Install, activate and set language extensions
case $language in
  fr)
    ynh_script_progression "Installing French extension..."
    ynh_composer_exec require qiaeru/lang-french:*
    activate_flarum_extension $db_name "qiaeru-lang-french"
    sql_command="UPDATE \`settings\` SET \`value\` = 'fr' WHERE \`settings\`.\`key\` = 'default_locale'"
    ynh_mysql_db_shell <<< "$sql_command"

    ;;
  de)
    ynh_script_progression "Installing German extension..."
    ynh_composer_exec require kakifrucht/flarum-de:*
    activate_flarum_extension $db_name "kakifrucht-de"
    sql_command="UPDATE \`settings\` SET \`value\` = 'de' WHERE \`settings\`.\`key\` = 'default_locale'"
    ynh_mysql_db_shell <<< "$sql_command"

    ;;
esac

# Set files and directories permissions
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
